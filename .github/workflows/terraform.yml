name: Terraform

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      TF_VAR_cloud_id: ${{ secrets.CLOUD_ID }}
      TF_VAR_folder_id: ${{ secrets.FOLDER_ID }}
      TF_VAR_ssh_key: ${{ secrets.SSH_PUBLIC_KEY }}
    defaults:
      run:
        working-directory: ./infra

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.8.3

      - name: Set up Yandex Cloud service account key
        working-directory: ./infra
        run: |
          echo "${{ secrets.YC_KEY_JSON }}" | base64 -d > ./authorized_key.json

      - name: Initialize Terraform
        working-directory: ./infra
        run: terraform init -backend-config="access_key=$ACCESS_KEY" -backend-config="secret_key=$SECRET_KEY"
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Terraform Plan
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Terraform Apply
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}

      - name: Terraform Destroy
        working-directory: ./infra
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve
        env:
          ACCESS_KEY: ${{ secrets.ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}